package c06.access;

// 접근 제한자(access modifier)
// 접근 제한자는 말 그대로 접근을 제한하기 위해 사용
// 접근이란 클래스 및 인터페이스 그리고 이들이 가지고 있는 멤버의 접근을 말한다.

// 경우에 따라 클래스와 인터페이스를 다른 패키지에서 사용하지 못하도록 막거나
// 객체 생성을 막기 위해 생성자를 호출히자 못하게 하거나 필드나 메서드를 사용하지 못하도록 막아야 되는 경우도 있다.
// 이때 접근 제한자를 사용할 수 있다.

// 접근 제한자 종류
// public: 외부 클래스가 자유롭게 사용할 수 있다.
// protected: 같은 패키지 또는 자식 클래스에서 사용할 수 있다.
// defalut: 같은 패키지에 소속된 클래스에서만 사용할 수 있다.
// private: 클래스 내부에서만 사용 가능

// 클래스를 다른 개발자가 사용할 수 있도록 라이브러리 클래스로 개발한다면 반드시 public 접근 제한을 갖도록한다.
// 클래스에 생성자를 선언하지 않아 컴파일러에 의해 자동으로 기본 생성자가 추가될 때
// 생성되는 기본 생성자의 접근 제한은 클래스의 접근 제한과 동일하다.

// 클래스, 생성자, 메서드는 일반적으로 public으로 사용한다.
// 그러면 객체 지향 관점에서 틀리지 않다.
public class Modifier {
	
	public Modifier() {
		
	}
	
	public String getString() {
		return "";
	}
	
}

